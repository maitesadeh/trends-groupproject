import Head from "next/head";
import React, { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import Button from "../public/UI/Button";
import Nav from "../public/UI/Nav";
import { app, db } from "../util/firebase";
import {
  onSnapshot,
  query,
  collection,
  getFirestore,
  where,
  getDoc,
  getDocs,
  addDoc,
} from "firebase/firestore";

import {
  getAuth,
  GoogleAuthProvider,
  signInWithPopup,
  signOut,
} from "firebase/auth";
import { FirebaseError } from "firebase/app";

export default function Home() {
  const [user, setUser] = useState({
    username: "",
    picture: "",
    images: [],
    favorites: [],
  });
  const [isSignedIn, setIsSignedIn] = useState(false);
  const auth = getAuth(app);

  const provider = new GoogleAuthProvider();
  const signInWithGoogle = () => {
    signInWithPopup(auth, provider)
      .then((result) => {
        const name = result.user.displayName + "";
        const profilePic = result.user.photoURL + "";

        // setUser({ ...user, username: name, picture: profilePic });

        setIsSignedIn(true);
        console.log(name);

        const taskQuery = query(
          collection(db, "firstuser"),
          where("username", "==", name)
        );
        console.log(taskQuery);
      })
      .catch((error) => alert(error));
  };

  const signOutFromApp = () => {
    // auth.signOut();q
    // signOut(auth).then((res) => console.log(res));
  };
  if (isSignedIn) {
    const userRef = collection(db, "firstuser");

    addDoc(userRef, user).then(() => null);
    console.log(user);
  }

  const userRef = collection(db, "firstuser");
  const userQuery = query(userRef);
  useEffect(() => {
    // TODO: Update `tasks` state using snapshot (uncomment the following)
    const unsubscribe = onSnapshot(userQuery, (querySnapshot) => {
      // let todos: TaskWithId[] = []
      // querySnapshot.docs.forEach((doc) => {
      //   todos.push({
      //     text: doc.data().text,
      //     checked: doc.data().checked,
      //     id: doc.data().id,
      //   })
      // })
      const todoData = querySnapshot.docs.map((doc) => ({
        ...doc.data(),
        id: doc.id,
      }));
      // console.log(todoData);

      // setUser({...user, images :[...todoData]})
    });
    return unsubscribe;
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Nav></Nav>
      <div className={styles.home}>
        <div>
          <h1>Cornell Photography</h1>
          <Button name="Sign In With Google" onClick={signInWithGoogle} />
          {isSignedIn ? <p>Hello {user.username}</p> : <p>Haven't signed In</p>}
          {/* <Button name="Sign Out" onClick={signOutFromApp} /> */}
        </div>
      </div>
    </div>
  );
}
